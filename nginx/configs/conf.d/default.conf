# frontend & backend
server {
    listen 80;
    server_name teya.gg www.teya.gg teya;

    location /report.html {
        root /usr/share/nginx/html;
        auth_basic "Restricted Access";
        auth_basic_user_file /etc/nginx/.htpasswd;
        try_files /report.html =404;
    }

    location / {
        auth_basic "Restricted Access";
        auth_basic_user_file /etc/nginx/.htpasswd;
        root /usr/share/nginx/html/frontend;
        try_files $uri $uri/ /index.html;
    }

    location /api/ {
        auth_basic "Restricted Access";
        auth_basic_user_file /etc/nginx/.htpasswd;
        proxy_pass http://backend:3000/;

        client_max_body_size 2G;
    }

    location /websites-filebrowser {
        auth_basic "Restricted Access";
        auth_basic_user_file /etc/nginx/.htpasswd;

        # prevents 502 bad gateway error
        proxy_buffers 8 32k;
        proxy_buffer_size 64k;

        client_max_body_size 0;

        # redirect all HTTP traffic to localhost:8088;
        proxy_pass http://websites-filebrowser:8080;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #proxy_set_header X-NginX-Proxy true;

        # enables WS support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_read_timeout 999999999;
    }
}

server {
    listen 443 ssl;
    server_name teya.gg www.teya.gg teya;

    ssl_certificate /etc/ssl/certs/teya.gg.crt;
    ssl_certificate_key /etc/ssl/private/teya.gg.key;

    location /report.html {
        auth_basic "Restricted Access";
        auth_basic_user_file /etc/nginx/.htpasswd;
        root /usr/share/nginx/html;
        try_files /report.html =404;
    }

    location / {
    auth_basic "Restricted Access";
    auth_basic_user_file /etc/nginx/.htpasswd;
    root /usr/share/nginx/html/frontend;
    try_files $uri $uri/ /index.html;
    }

    location /api/ {
        auth_basic "Restricted Access";
        auth_basic_user_file /etc/nginx/.htpasswd;
        proxy_pass http://backend:3000/;

        client_max_body_size 2G;
    }

    location /websites-filebrowser {
        auth_basic "Restricted Access";
        auth_basic_user_file /etc/nginx/.htpasswd;

        # prevents 502 bad gateway error
        proxy_buffers 8 32k;
        proxy_buffer_size 64k;

        client_max_body_size 0;

        # redirect all HTTP traffic to localhost:8088;
        proxy_pass http://websites-filebrowser:8080;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #proxy_set_header X-NginX-Proxy true;

        # enables WS support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_read_timeout 999999999;
    }
}

# Websites

server {
    listen 80;
    server_name ~^(www\.)?(?<name>.+)$;

    set $root_path "/usr/share/nginx/html/websites/$name";
    root $root_path;

    index index.html index.php;

    location ~* \.(jpg|jpeg|png|gif)$ {
        try_files $uri @placeholder;
    }

    location ~* \.js$ {
        try_files $uri @empty_js;
    }

    location @empty_js {
        return 200 '';
    }

    location @placeholder {
        empty_gif;
    }

    location / {
        try_files $uri $uri/ @404;
    }

    location @404 {
        rewrite ^ / permanent;
    }

    location ~ \.php$ {
        try_files $uri.html $uri =404;
    }

    error_page 404 =301 /;
}

server {
    listen 443 ssl;
    server_name ~^(www\.)?(?<name>.+)$;

    ssl_certificate /etc/ssl/certs/teya.gg.crt;
    ssl_certificate_key /etc/ssl/private/teya.gg.key;

    set $root_path "/usr/share/nginx/html/websites/$name";
    root $root_path;

    index index.html index.php;

    location ~* \.(jpg|jpeg|png|gif)$ {
        try_files $uri @placeholder;
    }

    location ~* \.js$ {
        try_files $uri @empty_js;
    }

    location @empty_js {
        return 200 '';
    }

    location @placeholder {
        empty_gif;
    }

    location / {
        try_files $uri $uri/ @404;
    }

    location @404 {
        rewrite ^ / permanent;
    }

    location ~ \.php$ {
        try_files $uri.html $uri =404;
    }

    error_page 404 =301 /;
}