version: '3.9'

services:
  backend:
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - MY_ENVIRONMENT=Production
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-5432}
      - DB_USERNAME=${DB_USERNAME:-prod}
      - DB_PASSWORD=${DB_PASSWORD:-prod}
      - DB_DATABASE=${DB_DATABASE:-prod}
      - MEGA_NZ_LOGIN=${MEGA_NZ_LOGIN}
      - MEGA_NZ_PASSWORD=${MEGA_NZ_PASSWORD}
    depends_on:
      - db
    links:
      - db
    networks:
      - teya-prod-network
    volumes:
      - ./pbn/content:/usr/src/app/pbn/content
      - pbn-content:/usr/src/app/pbn/content

  nginx:
    image: nginx:1.25.3
    build:
      context: ./
      dockerfile: nginx/Dockerfile
      args:
        BASIC_AUTH_PASSWORD: ${BASIC_AUTH_PASSWORD:-123}
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    command: ["/bin/sh", "-c", "until ping -c1 backend &>/dev/null; do echo 'Waiting for backend...'; sleep 1; done; nginx -g 'daemon off;'"]
    networks:
      - teya-prod-network
    volumes:
      - pbn-build:/usr/share/nginx/html/pbn

  db:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USERNAME:-prod}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-prod}
      POSTGRES_DB: ${DB_DATABASE:-prod}
    volumes:
      - ./data/db:/var/lib/postgresql/data
    networks:
      - teya-prod-network
    hostname: db

  migration:
    image: backend:latest
    command: >
      /bin/sh -c "while ! /usr/local/bin/wait-for-it.sh db:5432 -t 30; do
          echo 'Waiting for database availability...';
          sleep 5;
      done;
      npm run typeorm migration:run"
    links:
      - db
    depends_on:
      - db
    networks:
      - teya-prod-network
    environment:
      - MY_ENVIRONMENT=Development
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-5432}
      - DB_USERNAME=${DB_USERNAME:-prod}
      - DB_PASSWORD=${DB_PASSWORD:-prod}
      - DB_DATABASE=${DB_DATABASE:-prod}

  pbn:
    build:
      context: ./pbn
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    networks:
      - teya-prod-network
    depends_on:
      - backend
    command: ["/bin/sh", "-c", "until ping -c1 backend &>/dev/null; do echo 'Waiting for backend...'; sleep 1; done; node server.js"]
    volumes:
      - pbn-content:/usr/src/app/content
      - pbn-build:/usr/src/app/dist

networks:
  teya-prod-network:
    name: teya-prod-network
    driver: bridge

volumes:
  pbn-build: {}
  pbn-content: {}